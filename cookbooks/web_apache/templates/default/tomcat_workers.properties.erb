## Define some properties
workers.apache_log=/var/log/<%= node[:apache][:config_subdir] %>/
workers.tomcat_home=/usr/share/<%= @tomcat_name %>
workers.java_home=/usr/lib/jvm/java
ps=/

## Define 4 workers, 3 real workers using ajp13, jni, and the last one being a loadbalancing worker
# Activate worker1 only
worker.list=ajp13

## Set properties for worker1 (ajp13)
worker.ajp13.type=ajp13
worker.ajp13.host=localhost
worker.ajp13.port=8009
worker.ajp13.lbfactor=1
worker.ajp13.connection_pool_timeout=600
worker.ajp13.socket_keepalive=1
worker.ajp13.socket_timeout=60

## Set properties for worker2 (ajp13)
# worker.worker2.type=ajp13
# worker.worker2.host=domain.com
# worker.worker2.port=8009
# worker.worker2.lbfactor=1
# worker.worker2.connection_pool_timeout=600
# worker.worker2.socket_keepalive=1
# worker.worker2.socket_timeout=60

## Set properties for worker3 (jni) for TomCat 3.3
# worker.worker3.type=jni
## Set worker3 bridge type, here Tomcat 3.3
# worker.worker3.bridge=tomcat33
## Set worker3 classpath
# worker.worker3.class_path=$(workers.tomcat_home)$(ps)classes
# worker.worker3.class_path=$(workers.tomcat_home)$(ps)lib$(ps)tomcat.jar
## Set worker3 tomcat command line
# worker.worker3.cmd_line=-home
# worker.worker3.cmd_line=$(workers.tomcat_home)
## Set worker3 Tomcat/JVM settings
# worker.worker3.jvm_lib=$(workers.java_home)$(ps)jre$(ps)bin$(ps)classic$(ps)libjvm.so
# worker.worker3.stdout=$(workers.apache_log)$(ps)inprocess.stdout
# worker.worker3.stderr=$(workers.apache_log)$(ps)inprocess.stderr
# worker.worker3.sysprops=tomcat.home=$(workers.tomcat_home)

## Set properties for worker4 (lb) which use worker1 and worker2
# worker.worker4.balance_workers=worker1,worker2
